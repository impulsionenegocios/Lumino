import { c as createAstro, a as createComponent, r as renderComponent, e as renderScript, b as renderTemplate, m as maybeRenderHead, d as addAttribute, F as Fragment } from '../../chunks/astro/server_DwmPXTEX.mjs';
import { g as getMainData, $ as $$MainLayout } from '../../chunks/mainLayout_CzeWPJo_.mjs';
import { $ as $$MainButton } from '../../chunks/mainButton_DxiZMp03.mjs';
import { $ as $$DotsShape } from '../../chunks/dotsShape_BJsPkNJy.mjs';
import { $ as $$Heading, a as $$Paragraph } from '../../chunks/Paragraph_nAqocYGp.mjs';
import { g as getServiceBySlug, a as getServicePaths } from '../../chunks/servicesData_CscwxFh9.mjs';
export { renderers } from '../../renderers.mjs';

const $$Astro = createAstro("https://joqueianapolis.com.br");
async function getStaticPaths() {
  try {
    const paths = await getServicePaths();
    return paths;
  } catch (error) {
    console.error("\u274C Erro ao gerar caminhos est\xE1ticos:", error);
    return [];
  }
}
const $$slug = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$slug;
  const { slug } = Astro2.params;
  let serviceData;
  try {
    serviceData = await getServiceBySlug(slug);
  } catch (error) {
    console.error(`\u274C Erro ao buscar servi\xE7o ${slug}:`, error);
    return Astro2.redirect("/404");
  }
  if (!serviceData) {
    return Astro2.redirect("/404");
  }
  let mainData;
  try {
    mainData = await getMainData();
  } catch (error) {
    console.error("erro ao buscar os dados da clinica", error);
    throw error;
  }
  const clinicData = {
    nome: "L\xFAmino Cl\xEDnica Integrada",
    whatsapp: "5562983265797"};
  const whatsappMessage = encodeURIComponent(
    `Ol\xE1! Vi o site e gostaria de agendar uma avalia\xE7\xE3o para ${serviceData.heroTitle}.`
  );
  const whatsappLink = `https://wa.me/${clinicData.whatsapp}?text=${whatsappMessage}`;
  const metaTitle = `${serviceData.heroTitle} | ${clinicData.nome}`;
  const metaDescription = serviceData.heroDescription;
  return renderTemplate`${renderComponent($$result, "MainLayout", $$MainLayout, { "title": metaTitle, "description": metaDescription }, { "default": async ($$result2) => renderTemplate`  ${maybeRenderHead()}<section class="h-[100vh] bg-white flex items-center overflow-hidden relative"> <div class="hero-bg"> ${serviceData.heroImage && renderTemplate`<img${addAttribute(serviceData.heroImage, "src")}${addAttribute(serviceData.heroTitle, "alt")} class="hero-bg-image" loading="eager" width="1920" height="1080">`} </div> <div class="counter-particles"></div> <div class="mx-auto max-w-[1600px] lg:pl-40 w-full z-10"> <div class="lg:w-[50%] px-8 lg:px-0 z-3"> <span class="text-primary-gold font-bold animate-subtitle"> ${serviceData.heroSubtitle} </span> <br> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.heroTitle, "accent": serviceData.heroTitleAccent })} <p class="text-xs text-gray-600 animate-description mt-6 leading-relaxed"> ${serviceData.heroDescription} </p> <div class="flex flex-col lg:flex-row gap-4 animate-buttons mt-8"> ${renderComponent($$result2, "Button", $$MainButton, { "title": "Quero agendar minha avalia\xE7\xE3o", "href": whatsappLink })} ${renderComponent($$result2, "Button", $$MainButton, { "title": "Saber Mais", "href": "#for-who", "variant": "outline" })} </div> </div> ${renderComponent($$result2, "DotsShape", $$DotsShape, {})} <div class="scroll-down"> <span>&nbsp;</span> <p>Deslize para baixo</p> </div> </div> </section>  ${serviceData.forWho && serviceData.forWho.length > 0 && renderTemplate`<section class="px-8 lg:px-16 py-8 lg:py-16 bg-white" id="for-who"> <div> <div class="text-center mb-16"> <h2 class="section-title section-title-center">
É pra <span class="accent">você que...</span> </h2> </div> <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8"> ${serviceData.forWho.map((item) => renderTemplate`<div class="text-center reveal-effect"> <div class="w-24 h-24 mx-auto mb-6 bg-light-bg rounded-2xl flex items-center justify-center text-4xl hover:bg-primary-gold hover:text-white transition-all duration-500 transform hover:-translate-y-2"> ${item.icon && renderTemplate`<span class="text-3xl">${item.icon}</span>`} </div> <p class="text-gray-700 font-medium"> ${item.text} </p> </div>`)} </div> </div> </section>`} ${serviceData.benefits && serviceData.benefits.length > 0 && renderTemplate`<section class="bg-primary-dark text-white px-8 lg:px-16 py-8 lg:py-16"> <div class="shape shape-3"></div> <div> <div class="text-center mb-16"> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.benefitsTitle, "accent": serviceData.benefitsTitleAccent, "color": "white" })} ${serviceData.benefitsDescription && renderTemplate`<p class="section-subtitle section-subtitle-center text-white/70"> ${serviceData.benefitsDescription} </p>`} </div> <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8"> ${serviceData.benefits.map((benefit) => renderTemplate`<div class="text-center reveal-effect group cursor-pointer"> <div class="w-20 h-20 mx-auto mb-6 bg-white/10 rounded-2xl flex items-center justify-center text-3xl group-hover:bg-primary-gold transition-all duration-500 transform group-hover:scale-110"> ${benefit.icon && renderTemplate`<span>${benefit.icon}</span>`} </div> <h3 class="text-xl font-bold mb-2 text-primary-gold">${benefit.title}</h3> <p class="text-white/80">${benefit.text}</p> </div>`)} </div> </div> </section>`} ${serviceData.casesBeforeAfter && serviceData.casesBeforeAfter.length > 0 && renderTemplate`<section class="bg-light-bg px-8 lg:px-16 py-8 lg:py-16" id="casos"> <div class="shape shape-2"></div> <div> <div class="gallery-header text-center mb-12"> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.casesTitle, "accent": serviceData.casesTitleAccent })} ${serviceData.casesDescription && renderTemplate`<p class="section-subtitle section-subtitle-center"> ${serviceData.casesDescription} </p>`} </div> <div class="gallery-container reveal-effect"> <div class="gallery-grid"> ${serviceData.casesBeforeAfter.map((caseItem, index) => renderTemplate`<div class="gallery-item"> <div class="grid grid-cols-2 h-full"> <div class="relative"> ${caseItem.before && renderTemplate`<img${addAttribute(caseItem.before, "src")} alt="Antes do tratamento" class="gallery-image" width="400" height="400">`} <span class="absolute top-4 left-4 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
ANTES
</span> </div> <div class="relative"> ${caseItem.after && renderTemplate`<img${addAttribute(caseItem.after, "src")} alt="Depois do tratamento" class="gallery-image" width="400" height="400">`} <span class="absolute top-4 right-4 bg-green-500 text-white px-3 py-1 rounded-full text-sm font-bold">
DEPOIS
</span> </div> </div> <div class="gallery-overlay"> <div class="gallery-caption"> <h4 class="gallery-title"> ${caseItem.title} </h4> <p class="gallery-category"> ${caseItem.description} </p> </div> </div> </div>`)} </div> <div class="text-center mt-12"> ${renderComponent($$result2, "Button", $$MainButton, { "title": serviceData.CasesButtonTitle, "href": whatsappLink })} </div> </div> </div> </section>`} ${serviceData.authTitle && serviceData.authTitleAccent && renderTemplate`<section class="bg-white px-8 lg:px-16 py-8 lg:py-16"> <div> <div class="grid lg:grid-cols-2 gap-16 items-center"> <div class="reveal-effect"> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.authTitle, "accent": serviceData.authTitleAccent })} ${renderComponent($$result2, "Paragraph", $$Paragraph, { "text": serviceData.authDescription })} ${serviceData.authItems && serviceData.authItems.length > 0 && renderTemplate`<div class="grid grid-cols-3 gap-8"> ${serviceData.authItems.map((item) => renderTemplate`<div class="text-center"> <div class="text-4xl font-bold text-primary-gold mb-2"> ${item.value} </div> <p class="text-sm text-gray-600"> ${item.description} </p> </div>`)} </div>`} </div> <div class="relative reveal-effect"> ${serviceData.authFeaturedImage && renderTemplate`<img${addAttribute(serviceData.authFeaturedImage, "src")} alt="Equipe Lúmino Clínica" width="600" height="400" class="rounded-2xl shadow-2xl">`} ${serviceData.authBadgeTitleOne && serviceData.authBadgeTitleTwo && renderTemplate`<div class="absolute -bottom-6 -right-6 bg-primary-gold text-white px-8 py-4 rounded-2xl font-bold shadow-xl"> <div class="text-center"> <div class="text-2xl"> ${serviceData.authBadgeTitleOne} </div> <div class="text-sm font-normal"> ${serviceData.authBadgeTitleTwo} </div> </div> </div>`} </div> </div> </div> </section>`} ${serviceData.faqItems && serviceData.faqItems.length > 0 && renderTemplate`<section class="bg-light-bg px-8 lg:px-16 py-8 lg:py-16"> <div class="shape shape-2"></div> <div> <div class="max-w-4xl mx-auto"> <div class="text-center mb-16"> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.faqTitle, "accent": serviceData.faqTitleAccent })} </div> <div class="space-y-4"> ${serviceData.faqItems.map((faq, index) => renderTemplate`<div class="bg-white rounded-2xl overflow-hidden reveal-effect"> <button class="w-full text-left p-6 font-bold text-primary-dark hover:bg-light-bg transition-colors duration-300 flex items-center justify-between faq-toggle"${addAttribute(`faq-${index + 1}`, "data-target")}> <span class="flex items-center"> <span class="mr-4 text-2xl text-primary-gold">👉</span> ${faq.question} </span> <svg class="w-5 h-5 transition-transform duration-300 faq-icon text-primary-gold" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path> </svg> </button> <div${addAttribute(`faq-${index + 1}`, "id")} class="hidden p-6 pt-0 text-gray-700 leading-relaxed faq-content"> ${faq.answer} </div> </div>`)} </div> </div> </div> </section>`} <section class="contact-cta !px-8 lg:!px-16 !py-8 lg:!py-16" id="form-section"> <div class="contact-cta-shape contact-cta-shape-1"></div> <div class="contact-cta-shape contact-cta-shape-2"></div> <div class="text-center"> ${renderComponent($$result2, "Heading", $$Heading, { "text": serviceData.ctaTitle, "accent": serviceData.ctaTitleAccent, "color": "white" })} ${renderComponent($$result2, "Paragraph", $$Paragraph, { "text": serviceData.ctaDescription })} <div class="max-w-2xl mx-auto mt-12"> <form class="bg-white/10 backdrop-blur-sm rounded-3xl p-8 md:p-12" id="contact-form"> ${serviceData.CtaForm && serviceData.CtaForm.form_fields && serviceData.CtaForm.form_fields.length > 0 ? renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate`<div class="grid md:grid-cols-2 gap-6 mb-6"> ${serviceData.CtaForm.form_fields.filter((field) => field.type !== "button").slice(0, 2).map((field) => renderTemplate`<div${addAttribute(field.id, "key")}> ${field.type === "select" ? renderTemplate`<select${addAttribute(field.field_name, "name")}${addAttribute(field.required === true, "required")} class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300"> <option value="" class="text-primary-dark">${field.label}</option> ${field.options && field.options.map((option) => renderTemplate`<option${addAttribute(option, "key")}${addAttribute(option.toLowerCase(), "value")} class="text-primary-dark"> ${option} </option>`)} </select>` : renderTemplate`<input${addAttribute(field.type === "number" ? "tel" : field.type === "text" ? "text" : field.type, "type")}${addAttribute(field.field_name, "name")}${addAttribute(field.label, "placeholder")}${addAttribute(field.required === true, "required")} class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white placeholder-white/70 focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300">`} </div>`)} </div> ${serviceData.CtaForm.form_fields.filter((field) => field.type !== "button").slice(2).map((field) => renderTemplate`<div${addAttribute(field.id, "key")} class="mb-6"> ${field.type === "select" ? renderTemplate`<select${addAttribute(field.field_name, "name")}${addAttribute(field.required === true, "required")} class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300"> <option value="" class="text-primary-dark">${field.label}</option> ${field.options && field.options.map((option) => renderTemplate`<option${addAttribute(option, "key")}${addAttribute(option.toLowerCase(), "value")} class="text-primary-dark"> ${option} </option>`)} </select>` : renderTemplate`<input${addAttribute(field.type === "number" ? "tel" : field.type === "text" ? "text" : field.type, "type")}${addAttribute(field.field_name, "name")}${addAttribute(field.label, "placeholder")}${addAttribute(field.required === true, "required")} class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white placeholder-white/70 focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300">`} </div>`)}${serviceData.CtaForm.form_fields.filter((field) => field.type === "button").map((field) => renderTemplate`<button${addAttribute(field.id, "key")} type="submit" class="w-full bg-primary-gold text-primary-dark px-8 py-4 rounded-full font-bold text-lg hover:bg-gold-dark transition-all duration-300 transform hover:scale-105 shadow-xl"> ${field.label} </button>`)}` })}` : (
    /* Formulário fallback caso não haja campos */
    renderTemplate`${renderComponent($$result2, "Fragment", Fragment, {}, { "default": async ($$result3) => renderTemplate` <div class="grid md:grid-cols-2 gap-6 mb-6"> <input type="text" name="name" placeholder="Nome Completo" required class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white placeholder-white/70 focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300"> <input type="tel" name="phone" placeholder="Telefone/WhatsApp" required class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white placeholder-white/70 focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300"> </div> <select name="bestHour" required class="w-full px-6 py-4 rounded-2xl bg-white/20 border border-white/30 text-white focus:outline-none focus:border-primary-gold focus:bg-white/30 transition-all duration-300 mb-8"> <option value="" class="text-primary-dark">Melhor Horário Para Contato</option> <option value="manha" class="text-primary-dark">Manhã</option> <option value="tarde" class="text-primary-dark">Tarde</option> </select> <button type="submit" class="w-full bg-primary-gold text-primary-dark px-8 py-4 rounded-full font-bold text-lg hover:bg-gold-dark transition-all duration-300 transform hover:scale-105 shadow-xl">
Quero Agendar Minha Avaliação
</button> ` })}`
  )} </form> </div> </div> </section>  <section class="bg-primary-dark text-white px-8 lg:px-16 py-8 lg:py-16"> <div> <div class="text-center"> <h3 class="font-cormorant text-3xl font-bold mb-6"> ${mainData?.nome || ""} </h3> <p class="text-sm text-white/60 mb-8">
CRO: ${mainData?.numero_cro} | Responsável Técnico: ${mainData?.responsavel_tecnico} </p> <div class="flex flex-wrap justify-center items-center gap-8 text-sm text-white/70"> <div class="flex items-center gap-2"> <span>📍</span> <span>Atendemos na região de ${mainData?.endereco}</span> </div> <div class="flex items-center gap-2"> <span>📞</span> <span>${mainData?.telefone}</span> </div> <div class="flex items-center gap-2"> <span>📧</span> <span>${mainData?.email}</span> </div> </div> <div class="mt-12 pt-8 border-t border-white/10"> <p class="text-xs text-white/50 max-w-4xl mx-auto italic">
*Este site tem caráter exclusivamente informativo e segue as diretrizes do Código de
            Ética Odontológica. A avaliação presencial é essencial para diagnóstico individualizado.
</p> </div> </div> </div> </section> ` })} ${renderScript($$result, "/home/zayit/projetos/lumino/apps/frontend/src/pages/servicos/[slug].astro?astro&type=script&index=0&lang.ts")}`;
}, "/home/zayit/projetos/lumino/apps/frontend/src/pages/servicos/[slug].astro", void 0);

const $$file = "/home/zayit/projetos/lumino/apps/frontend/src/pages/servicos/[slug].astro";
const $$url = "/servicos/[slug]";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$slug,
  file: $$file,
  getStaticPaths,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
