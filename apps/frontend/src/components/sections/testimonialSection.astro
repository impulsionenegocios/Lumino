---
interface Testimonial {
  text: string;
  authorName: string;
  authorRole: string;
  avatar: string;
  rating: number;
}

const {
  headingTitle,
  headingAccent,
  description,
  testimonials,
} = Astro.props as {
  headingTitle: string;
  headingAccent: string;
  description: string;
  testimonials: Testimonial[];
};
---

<section class="section testimonials" id="testimonials">
  <div class="shape shape-1"></div>
  <div class="shape shape-2"></div>
  <div class="container">
    <div class="testimonials-header">
      <h2 class="section-title section-title-center">
        {headingTitle} <span class="accent">{headingAccent}</span> dizem
      </h2>
      <p class="section-subtitle section-subtitle-center">
        {description}
      </p>
    </div>
    <div class="testimonials-wrapper">
      <div class="testimonials-container">
        <div class="testimonials-grid">
          {testimonials.map((t) => (
            <div class="testimonial-card reveal-effect">
              <div class="testimonial-quote">"</div>
              <p class="testimonial-text">{t.text}</p>
              <div class="testimonial-author">
                <div class="testimonial-avatar">
                  <img src={t.avatar} alt={`Avatar de ${t.authorName}`} />
                </div>
                <div class="testimonial-info">
                  <h4>{t.authorName}</h4>
                  <p>{t.authorRole}</p>
                  <div class="testimonial-rating">
                    {Array.from({ length: t.rating }).map(() => (
                      <span class="testimonial-star">â˜…</span>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>
