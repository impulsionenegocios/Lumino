---
// src/components/IconBrowser.astro
const sets = {
  'line-md': import.meta.glob('/src/icons/line-md/*.svg'),
  'mdi': import.meta.glob('/src/icons/mdi/*.svg'),
};

const allIcons = [];

for (const [set, glob] of Object.entries(sets)) {
  for (const path of Object.keys(glob)) {
    const name = path.split('/').pop().replace('.svg', '');
    const mod = await glob[path]();
    allIcons.push({
      set,
      name,
      Component: mod.default,
    });
  }
}

allIcons.sort((a, b) => a.name.localeCompare(b.name));
---

<style>
  .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)); gap: 1rem; }
  .icon { cursor: pointer; text-align: center; font-size: 10px; }
  svg { width: 32px; height: 32px; margin-bottom: 4px; }
  input { width: 100%; padding: 8px; margin-bottom: 1rem; border: 1px solid #ccc; }
</style>

<input type="text" id="search" placeholder="Buscar Ã­cone..." />

<div class="grid" id="icon-grid">
  {
    allIcons.map(({ set, name, Component }) => (
      <div class="icon" data-name={name} data-set={set}>
        <Component />
        {set}:{name}
      </div>
    ))
  }
</div>

<script type="module">
  const search = document.querySelector('#search');
  const icons = document.querySelectorAll('[data-name]');

  search.addEventListener('input', () => {
    const term = search.value.toLowerCase();
    icons.forEach(icon => {
      const name = icon.dataset.name;
      icon.style.display = name.includes(term) ? 'block' : 'none';
    });
  });

  icons.forEach(icon => {
    icon.addEventListener('click', () => {
      const full = `${icon.dataset.set}:${icon.dataset.name}`;
      navigator.clipboard.writeText(full);
      alert(`Copiado: ${full}`);
    });
  });
</script>
