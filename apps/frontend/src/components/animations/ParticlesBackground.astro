---
// ParticlesEffect.astro -
---

<script is:inline>
  // Este script será executado no cliente após o carregamento do DOM
  document.addEventListener('DOMContentLoaded', async function() {
    // Verifica se o tsParticles está disponível (carregado via CDN)
    if (typeof tsParticles !== 'undefined') {
      try {
        // Inicializa as partículas na div counter-particles
        await tsParticles.load("counter-particles", {
          particles: {
            number: {
              value: 80,
              density: {
                enable: true,
                value_area: 800
              }
            },
            color: {
              value: "#c9a874"
            },
            shape: {
              type: "circle"
            },
            opacity: {
              value: 0.1,
              random: true
            },
            size: {
              value: 5,
              random: true
            },
            line_linked: {
              enable: true,
              distance: 150,
              color: "#c9a874",
              opacity: 0.05,
              width: 1
            },
            move: {
              enable: true,
              speed: 2,
              direction: "none",
              random: true,
              straight: false,
              out_mode: "out",
              bounce: false
            }
          },
          interactivity: {
            detect_on: "canvas",
            events: {
              onhover: {
                enable: true,
                mode: "grab"
              },
              onclick: {
                enable: true,
                mode: "push"
              },
              resize: true
            }
          },
          retina_detect: true
        });
        console.log("tsParticles inicializado com sucesso");
      } catch (error) {
        console.error("Erro ao inicializar tsParticles:", error);
        createFallbackParticles();
      }
    } else {
      console.warn('tsParticles não está disponível. Criando partículas alternativas.');
      createFallbackParticles();
    }
  });

  // Função para criar partículas simples como fallback
  function createFallbackParticles() {
    const counterParticles = document.getElementById('counter-particles');
    if (counterParticles) {
      // Adiciona 30 divs de partículas como fallback
      for (let i = 0; i < 30; i++) {
        const particle = document.createElement('div');
        particle.className = 'fallback-particle';
        particle.style.position = 'absolute';
        particle.style.width = (Math.random() * 5 + 2) + 'px';
        particle.style.height = (Math.random() * 5 + 2) + 'px';
        particle.style.backgroundColor = '#c9a874';
        particle.style.opacity = (Math.random() * 0.15).toString();
        particle.style.left = (Math.random() * 100) + '%';
        particle.style.top = (Math.random() * 100) + '%';
        particle.style.borderRadius = '50%';
        counterParticles.appendChild(particle);
      }
    }
  }
</script>